// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


// model User {
//   id         String   @id @default(cuid())
//   username   String   @unique
//   email      String   @unique
//   firstName  String?
//   middleName String?
//   lastName   String?
//   avatar     String?
//   password   String
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @default(now())
// }


model User {
    id Int @id @default(autoincrement())

    username String? @unique
    email    String  @unique
    hash     String

    first_name         String?
    last_name          String?
    avatar_url         String?
    cover_url          String?
    isTwoFactorEnabled Boolean? @default(false)
    TwoFactorSecret    String?

    rooms Room[]

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    room_user_rel Room_user_rel[]
    messages      Message[]
    
    followers Follows[] @relation("following")
    following Follows[] @relation("follower")

    @@map("users")
}

model Room {
    id Int @id @default(autoincrement())

    userLink1 User @relation(fields: [owner_id], references: [id])
    owner_id  Int

    room_type    Room_type @relation(fields: [room_type_id], references: [id])
    room_type_id Int

    count_messages Int? @default(0)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    room_user_rel Room_user_rel[]
    messages      Message[]

}

model Room_type { //???
    id Int @id @default(autoincrement())

    type       String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    room       Room[]
}

model Room_user_rel {
    id Int @id @default(autoincrement())

    roomLink Room @relation(fields: [room_id], references: [id])
    room_id  Int

    userLink User @relation(fields: [user_id], references: [id])
    user_id  Int

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Message {
    id Int @id @default(autoincrement())

    userLink User @relation(fields: [user_id], references: [id])
    user_id  Int

    roomLink Room @relation(fields: [room_id], references: [id])
    room_id  Int

    message String

    is_read Boolean @default(false)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  @@id([followerId, followingId])
}
